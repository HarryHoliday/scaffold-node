steps:
  - id: 'Set Env'
    name: 'gcr.io/cloud-builders/gcloud'
    entrypoint: bash
    args:
      - -c
      - |
        gcloud container clusters get-credentials --zone ${_CLOUDSDK_COMPUTE_ZONE} ${_CLOUDSDK_CONTAINER_CLUSTER}
        kubectl get secret/${_ENV}-env -o jsonpath='{.data.${REPO_NAME}}' | base64 --decode > /workspace/.env
        cat .env
        echo 'edit deploy file'
        sed -i 's/APP_NAME/${_APP_NAME}/g' ./deployment.yaml
        sed -i 's/SERVICE_ENV/${_ENV}/g' ./deployment.yaml
        sed -i 's/IMAGE_REPO/gcr.io\/${PROJECT_ID}\/${REPO_NAME}\/${BRANCH_NAME}\:${BUILD_ID}/g' ./deployment.yaml
        cat ./deployment.yaml

  - id: 'Build'
    name: 'gcr.io/cloud-builders/docker'
    args: ['build', '-t', 'gcr.io/${PROJECT_ID}/${REPO_NAME}/${BRANCH_NAME}:${BUILD_ID}', '.']

  - id: 'Deploy'
    name: 'gcr.io/cloud-builders/kubectl'
    args: ['apply', '-f', 'deployment.yaml']
    env:
      - 'CLOUDSDK_COMPUTE_ZONE=${_CLOUDSDK_COMPUTE_ZONE}'
      - 'CLOUDSDK_CONTAINER_CLUSTER=${_CLOUDSDK_CONTAINER_CLUSTER}'

images: ['gcr.io/${PROJECT_ID}/${REPO_NAME}/${BRANCH_NAME}:${BUILD_ID}']
logsBucket: 'gs://${PROJECT_ID}_cloudbuild'
options:
  logging: GCS_ONLY
